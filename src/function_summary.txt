[get_utilization]
Returns desk utilization based on provided filters.
Parameters:
  - overall: If True, returns overall utilization across all desks.
  - by_room: If True, returns utilization per room.
  - room: Specific room to filter utilization for. If None, includes all rooms.
  - weekday: List of weekdays to consider in the analysis.
  - start_date: Start of the period to analyze. If None, uses current date.
  - end_date: End of the period to analyze. If None, uses current date.

[get_overutilized_desks]
Returns desks with usage above or below a specified utilization threshold.
Parameters:
  - threshold: Utilization threshold as a float (e.g., 0.8 for 80%).
  - by_room: If True, aggregates results per room.
  - under: If True, returns desks with utilization below the threshold.
  - weekday: Weekdays to include in the evaluation.
  - start_date: Beginning of the time window. If None, defaults to today.
  - end_date: End of the time window. If None, defaults to today.

[get_daily_utilization_stats]
Returns average, minimum, and maximum utilization for each weekday.
Parameters:
  - by_room: If True, computes stats separately per room.
  - weekday: List of weekdays to include.
  - start_date: Start of the evaluation period.
  - end_date: End of the evaluation period.

[get_utilization_variance_by_weekday]
Calculates variance of desk utilization across weekdays.
Parameters:
  - by_room: If True, computes variance separately for each room.
  - desks: List of desk IDs to include. If None, includes all desks.
  - weekdays: Weekdays to consider for the analysis.
  - start_date: Start date for the analysis.
  - end_date: End date for the analysis.

[get_days_above_threshold]
Counts the number of days where utilization exceeds a given threshold.
Parameters:
  - threshold: Utilization threshold as a float.
  - weekdays: Days of the week to analyze.
  - start_date: Beginning of date range.
  - end_date: End of date range.

[simulate_policy]
Simulates the impact of a given policy on desk utilization.
Parameters:
  - policy_type: Type of policy, e.g., 'mandatory_day', 'min_days_per_week'.
  - mandatory_day: Specific weekday to enforce attendance on (if applicable).
  - min_days_per_week: Minimum number of days employees must attend in a week.
  - employee_count: Number of employees. Defaults to current count.
  - simulation_weeks: Number of weeks to run the simulation.

[detect_policy_violations]
Identifies employees who do not comply with a given policy.
Parameters:
  - policy_type: The policy being evaluated.
  - min_days_per_week: Required minimum days per week for attendance.
  - mandatory_day: Required attendance day if applicable.
  - weekdays: Days of the week considered.
  - start_date: Start of the period to evaluate.
  - end_date: End of the period to evaluate.

[get_avg_booking_per_employee]
Calculates the average number of bookings per employee.
Parameters:
  - granularity: Period unit for average, e.g., 'week' or 'month'.
  - weekdays: Days to include in the calculation.
  - start_date: Start date of the analysis.
  - end_date: End date of the analysis.

[get_booking_repeat_pattern]
Identifies users who book the same desks repeatedly.
Parameters:
  - min_repeat_count: Minimum number of repeated bookings.
  - weekdays: Days of interest.
  - start_date: Start date.
  - end_date: End date.

[get_booking_clusters]
Finds booking clusters, i.e., groups of users who often book nearby desks.
Parameters:
  - distance_threshold: Spatial proximity to define a cluster.
  - co_booking_count_min: Minimum times users must co-book nearby desks.
  - weekdays: Days to consider.
  - start_date: Start date.
  - end_date: End date.

[get_co_booking_frequencies]
Detects employee pairs who frequently book on the same days.
Parameters:
  - min_shared_days: Minimum number of shared booking days.
  - same_room_only: If True, limits to co-bookings in the same room.
  - weekdays: Days to analyze.
  - start_date: Start date.
  - end_date: End date.

[generate_heatmap]
Generates a heatmap showing desk bookings over time.
Parameters:
  - by_room: If True, shows heatmap per room.
  - resolution: Time resolution of heatmap: 'daily', 'weekly', or 'monthly'.
  - weekdays: Days of the week to include.
  - start_date: Start date for data.
  - end_date: End date for data.

[generate_plot_interactive]
Produces an interactive plot of desk booking data.
Parameters:
  - by_room: If True, plots are grouped by room.
  - resolution: Level of temporal detail ('daily', 'weekly', etc.).
  - weekdays: Days of interest.
  - start_date: Analysis start date.
  - end_date: Analysis end date.

[generate_plot]
Creates a plot of desk utilization over time.
Parameters:
  - by_room: If True, groups data by room.
  - resolution: Time granularity.
  - desk: Desk ID or 'all' to include all desks.
  - weekdays: Relevant weekdays.
  - start_date: Starting date.
  - end_date: Ending date.

[estimate_table_needs]
Estimates required number of desks to meet a target utilization.
Parameters:
  - target_utilization: Target average utilization.
  - attendance_days: Number of days employees are expected to attend weekly.
  - employee_count: Total number of employees considered.
  - existing_desks: Number of currently available desks.
  - data_for_forcast_start_date: Date to start using historical data.
  - data_for_forcast_end_date: Date to end using historical data.

[forecast_desk_demand]
Forecasts desk demand based on employee growth.
Parameters:
  - current_employee_count: Current number of employees.
  - weekly_growth_rate: Weekly employee growth as a percentage.
  - available_desks: Total number of desks available.
  - target_utilization: Desired desk utilization threshold.
  - data_for_forcast_start_date: Historical data start.
  - data_for_forcast_end_date: Historical data end.

[simulate_room_closure]
Simulates what happens if a room is closed.
Parameters:
  - room_id: Identifier of the room to close.
  - reassign_strategy: Strategy to reassign affected bookings (e.g., 'random').
  - time_closed: Timeframe of the closure.
  - data_for_forcast_start_date: Data window start.
  - data_for_forcast_end_date: Data window end.

[estimate_max_employees_per_room]
Estimates maximum employees for a room given a target utilization.
Parameters:
  - room_id: Identifier for the room.
  - target_utilization: Desired utilization rate.
  - average_attendance_days: Expected days in office per week.

[detect_utilization_anomalies]
Detects days or rooms with significant utilization anomalies.
Parameters:
  - threshold: Minimum deviation from average to be flagged.
  - by_room: If True, checks per room.
  - start_date: Period start.
  - end_date: Period end.

[compare_utilization_before_after_policy]
Compares utilization before and after a policy change.
Parameters:
  - policy_type: The type of policy introduced.
  - policy_params: Parameters defining the policy.
  - policy_start_date: When the policy went into effect.
  - start_date: Historical analysis start date.
  - end_date: Historical analysis end date.

[detect_unused_areas]
Finds desks or areas with very low usage.
Parameters:
  - threshold: Maximum allowed average utilization.
  - min_consecutive_days: Minimum consecutive days unused to be flagged.
  - start_date: Analysis start.
  - end_date: Analysis end.

[suggest_balanced_utilization_policy]
Suggests an attendance policy to achieve a more balanced desk utilization.
Parameters:
  - target_utilization: Desired average utilization rate per weekday (0 to 1).
  - max_mandatory_days: Maximum number of mandatory office days per week allowed in the policy.
